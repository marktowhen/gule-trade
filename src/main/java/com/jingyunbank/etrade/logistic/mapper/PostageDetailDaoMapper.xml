<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingyunbank.etrade.logistic.dao.PostageDetailDao">

	<resultMap type="com.jingyunbank.etrade.logistic.entity.PostageDetailEntity"
		id="PostageDetailMap">
		<result column="id" property="ID" />
		<result column="free" property="free" />
		<result column="postage_id" property="postageID" />
		<result column="first_number" property="firstNumber" />
		<result column="first_weight" property="firstWeight" />
		<result column="first_volume" property="firstVolume" />
		<result column="first_cost" property="firstCost" />
		<result column="next_number" property="nextNumber" />
		<result column="next_weight" property="nextWeight" />
		<result column="next_volume" property="nextVolume" />
		<result column="next_cost" property="nextCost" />
		<result column="fit_area" property="fitArea" />
		<result column="valid" property="valid" />
		<result column="transport_type" property="transportType" />
		<result column="fit_area_name" property="fitAreaName" />
	</resultMap>

	<sql id="base_column">
		id,postage_id,free,first_number,first_weight,first_volume,first_cost,
		 next_number,next_weight,next_volume,next_cost,fit_area,valid,transport_type,fit_area_name
	</sql>
	<insert id="insert">
		insert into postage_detail(<include refid="base_column"/>)
		values(#{ID},#{postageID},#{free},#{firstNumber},#{firstWeight},#{firstVolume},#{first_cost},
				#{next_number},#{next_weight},#{next_volume},#{next_cost},#{fit_area},#{valid},#{transportType},#{fitAreaName})
	</insert>
	
	<insert id="insertMuti">
		insert into postage_detail(<include refid="base_column"/>)
		values
		<foreach collection="details" index="detail" separator=",">
			(#{detail.ID},#{detail.postageID},#{detail.free},#{detail.firstNumber},#{detail.firstWeight},#{detail.firstVolume},#{detail.first_cost},
				#{detail.next_number},#{detail.next_weight},#{detail.next_volume},#{detail.next_cost},#{detail.fit_area},#{detail.valid},#{detail.transportType},#{detail.fitAreaName})
		</foreach>
	</insert>
	
	
	<update id="updateStatus">
		update postage_detail set valid=#{valid} where id=#{ID}
	</update>
	<update id="updateStatusBatch">
		update postage_detail set valid=#{valid} where postage_id=#{postageID}
	</update>
	
	<update id="update">
		update postage_detail 
			set free=#{free},
				first_number=#{firstNumber},
				first_weight=#{firstWeight},
				first_volume=#{firstVolume},
				first_cost=#{firstCost},
				next_number=#{nextNumber},
				next_weight=#{nextWeight},
				next_volume=#{nextVolume},
				next_cost=#{nextCost},
				fit_area=#{fitArea},
				transport_type=#{transportType},
				fit_area_name = #{fitAreaName}
			where id = #{ID}
	</update>
	<select id="selectOne" resultMap="PostageDetailMap">
		select <include refid="base_column"/> from postage_detail where id=#{ID}
	</select>
	
	<select id="selectByPostageID" resultMap="PostageDetailMap">
		select <include refid="base_column"/> from postage_detail where postage_id=#{postageID}  and valid=true order by transport_type
	</select>
	
	<select id="selectByFitArea" resultMap="PostageDetailMap">
		select <include refid="base_column"/> from postage_detail 
			where postage_id=#{postageID} and transport_type =#{transportType} and fit_area like CONCAT('%',#{fitArea} ,'%') and valid=true
	</select>
	
	<select id="selectDistinctTransportType" >
		select distinct transport_type from postage_detail 
			where postage_id=#{postageID}  and valid=true
	</select>
	
	<delete id="deleteBatch">
		delete from postage_detail where postage_id=#{postageID}
	</delete>
	
</mapper>
